SAMPLES = range(1,106)
CLUSTERS = ['nonperturb', 'perturb']

sim_dir = '/home/lynnyi/single/sim_dir/'
p_dir = sim_dir + '/sim_perturb/'
rsem_p_dir = sim_dir+'/rsem_perturb/'
np_dir = sim_dir + '/sim_nonperturb/'
rsem_np_dir = sim_dir + '/rsem_nonperturb/'
perturb_file = p_dir + '/perturb.tsv' 

#simulations code
model = 'log_normal'
sim_genes = 'FALSE'

#RSEM
RSEM_model = "/home/lynnyi/RSEM-1.3.0/exp/Trapnell_cluster1.stat/Trapnell_cluster1.model"

#kallisto pseudobatch
index = '/home/lynnyi/indices/kallisto_index/Trapnell_index.idx' 
kallisto42 = '/home/lynnyi/kallisto_linux-v0.42.5/kallisto'
batchdir = sim_dir + '/pseudo_batch/'
batchfile = batchdir + '/batchfile.txt'

scde_dir = sim_dir + '/scde/'
scde_em = scde_dir + '/scde_error_models.csv'
scde_de = scde_dir + '/scde_de.csv'
scde_df = scde_dir + '/df_scde.csv'
scde_qq = scde_dir + '/scde_qqplot.png'
scde_roc = scde_dir + '/scde_roc_curve.png'
scde_fdr = scde_dir + '/scde_fdr_curve.png'

rule all:
	input:
		batchfile,
		expand(sim_dir + '/rsem_quant_{cluster}/{sample}/abundance.tsv', cluster=CLUSTERS, sample=SAMPLES),
		batchdir + '/matrix.tsv'

rule simulate:
	output:
		expand(sim_dir + '/sim_{cluster}/{sample}.results', sample=SAMPLES, cluster=CLUSTERS),
	shell:
		"""
		echo simulating
		mkdir -p {sim_dir}
		mkdir -p {np_dir} {p_dir}
		Rscript /home/lynnyi/single/sims/simulating_pipeline.R {np_dir} {p_dir} {model} {sim_genes} 
		"""

rule rsem:
    input:
    	sim_dir + '/sim_{cluster}/{sample}.results'
    output:
    	sim_dir + '/rsem_{cluster}/{sample}.results_1.fq',
        sim_dir + '/rsem_{cluster}/{sample}.results_2.fq'
    params:
    	dir = sim_dir + '/rsem_{cluster}/{sample}.results'
    shell:
    	'python /home/lynnyi/dirichlet/python/RSEM_simulate.py {input} {params.dir}'


rule make_batch:
	input:
		expand(sim_dir + '/rsem_{cluster}/{sample}.results_1.fq', cluster=CLUSTERS, sample=SAMPLES),
		expand(sim_dir + '/rsem_{cluster}/{sample}.results_2.fq', cluster=CLUSTERS, sample=SAMPLES)
	output:
		batchfile
	params:
		py = '/home/lynnyi/dirichlet/python/make_batch.py',
	shell:
		"""
		echo makingbatch
		python {params.py} {rsem_np_dir} {rsem_p_dir} {batchfile} 
		"""

rule pseudoquant_rsem:
	input:
		expand(sim_dir+ '/rsem_{cluster}/{sample}.results_1.fq', cluster=CLUSTERS, sample=SAMPLES),
		expand(sim_dir+ '/rsem_{cluster}/{sample}.results_2.fq', cluster=CLUSTERS, sample=SAMPLES),
		batchfile
	output:
		batchdir + '/matrix.tsv',
		batchdir + '/matrix.ec',
		batchdir + '/run_info.json'
	shell:
		'{kallisto42} pseudo -i {index} -t 36 -o {batchdir} -b {batchfile}'

rule quant_rsem:
    input:
        r1 = sim_dir + '/rsem_{cluster}/{sample}.results_1.fq',
        r2 = sim_dir + '/rsem_{cluster}/{sample}.results_2.fq'
    output:
    	sim_dir + '/rsem_quant_{cluster}/{sample}/abundance.tsv'
    params:
    	out_dir = sim_dir + '/rsem_quant_{cluster}/{sample}/'
    shell:
    	"""
    	mkdir -p {params.out_dir}
    	{kallisto42} quant  -i {index} -o {params.out_dir} {input.r1} {input.r2}
    	"""

rule run_seurat:
    input:
	sim_dir + '/rsem_{cluster}/{sample}.results_1.fq',
	sim_dir + '/rsem_{cluster}/{sample}.results_2.fq'	
    output:
	sim_dir + '/de/deseq2.rds',
	sim_dir + '/de/tobit.rds',
	sim_dir + /de/mast.rds'
    shell:
	"""
	Rscript R/seurat.R {sim_dir}
	"""

rule LR_tccs:
    input:
	batch_dir + '/matrix.tsv'
    output:
	sim_dir + '/de/LR.rds'
    shell:
	"""
	Rscript R/tcc.R {sim_dir}
	"""

rule LR_transcripts:
    input:
	expand(sim_dir + '/rsem_quant_{cluster}/{sample}/abundance.tsv', cluster=CLUSTERS, sample=SAMPLES),	
    output:
	sim_dir + '/de/LR_tx.rds'
    shell:
	"""
	Rscript R/transcripts.R {sim_dir}
	"""

rule roc:
    input:
	sim_dir + '/de/mast.rds',
	sim_dir + '/de/scde.rds',
	sim_dir + '/de/LR.rds',
	sim_dir + '/de/LR_tccs.rds'
    output:
	sim_dir + 'fdrs.png'
    shell:
	"""
	Rscript R/roc.R {sim_dir}
	"""
